
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cuswzrhgqfaqedkjmsql.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN1c3d6cmhncWZhcWVka2ptc3FsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3Mzg4NzAsImV4cCI6MjA1NzMxNDg3MH0.dr0SBumWBNwmT6qW3nWXzH0zqvkq53NZFDhspSwxiy4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Enable realtime subscriptions for the tables we need
const enableRealtimeForTables = async () => {
  try {
    await supabase.realtime.setAuth(SUPABASE_PUBLISHABLE_KEY);
    
    // Create channels for realtime subscriptions
    const cryptoAssetsChannel = supabase.channel('crypto-assets-channel')
      .on('postgres_changes', { 
        event: '*', 
        schema: 'public',
        table: 'crypto_assets'
      }, payload => {
        console.log('Crypto asset updated:', payload);
      })
      .subscribe();
      
    const transactionsChannel = supabase.channel('transactions-channel')
      .on('postgres_changes', { 
        event: '*', 
        schema: 'public',
        table: 'transactions'
      }, payload => {
        console.log('Transaction:', payload);
      })
      .subscribe();
      
    console.log('Realtime channels enabled for crypto assets and transactions');
  } catch (error) {
    console.error('Error setting up realtime:', error);
  }
};

// Initialize realtime
enableRealtimeForTables();
